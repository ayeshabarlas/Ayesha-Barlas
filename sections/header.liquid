<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TISSO VISION - Responsive Header</title>
  </head>
  <body>
    <!-- Figma Promo Top Bar (with animations) -->
    <div class="figma-header-bar-animated">
      <div class="figma-header-inner">
        <div class="mobile-toggle" onclick="toggleMobileMenu()">
          <span></span>
          <span></span>
          <span></span>
        </div>
        <div class="logo">TISSO VISION</div>
        <div class="center-message">Find the ideal gift for your loved ones.</div>
        <a class="yellow-btn-animated" href="/collections/all"> CHOOSE GIFT <span class="arrow">→</span> </a>
      </div>
      <div class="mobile-content" id="mobileContent">
        <div class="mobile-message">Find the ideal gift for your loved ones.</div>
        <a class="yellow-btn-animated mobile-btn" href="/collections/all"> CHOOSE GIFT <span class="arrow">→</span> </a>
      </div>
    </div>

    <style>
      .figma-header-bar-animated {
        background: #fafafa;
        border-bottom: 1px solid #eee;
        padding: 10px 20px;
        font-family: 'Helvetica Neue', sans-serif;
      }
      .figma-header-inner {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
        flex-wrap: wrap;
      }
      .logo {
        font-weight: bold;
      }
      .center-message {
        flex: 1;
        text-align: center;
        font-size: 14px;
      }
      .yellow-btn-animated {
        background: #ffeb3b;
        color: #000;
        padding: 8px 14px;
        font-weight: bold;
        text-decoration: none;
        border-radius: 4px;
        display: inline-flex;
        gap: 5px;
        align-items: center;
        transition: all 0.3s ease;
      }
      .yellow-btn-animated .arrow {
        transition: transform 0.3s ease;
        display: inline-block;
      }
      .yellow-btn-animated:hover {
        background: #fdd835;
        transform: translateY(-1px);
      }
      .yellow-btn-animated:hover .arrow {
        transform: translateX(5px);
      }

      /* Mobile Toggle Button - Hidden by default */
      .mobile-toggle {
        display: none;
        flex-direction: column;
        cursor: pointer;
        width: 24px;
        height: 20px;
        justify-content: space-between;
      }
      .mobile-toggle span {
        width: 100%;
        height: 2px;
        background: #000;
        transition: all 0.3s ease;
      }
      .mobile-toggle.active span:nth-child(1) {
        transform: rotate(45deg) translate(6px, 6px);
      }
      .mobile-toggle.active span:nth-child(2) {
        opacity: 0;
      }
      .mobile-toggle.active span:nth-child(3) {
        transform: rotate(-45deg) translate(7px, -6px);
      }

      /* Mobile Content - Hidden by default */
      .mobile-content {
        display: none;
        padding: 15px 0;
        border-top: 1px solid #eee;
        margin-top: 10px;
        text-align: center;
      }
      .mobile-message {
        font-size: 14px;
        margin-bottom: 15px;
      }
      .mobile-btn {
        display: inline-flex !important;
      }

      /* Mobile Media Query */
      @media (max-width: 768px) {
        .figma-header-inner {
          justify-content: center;
          position: relative;
          flex-wrap: nowrap;
        }

        .mobile-toggle {
          display: flex;
          position: absolute;
          left: 0;
        }

        .logo {
          text-align: center;
          flex: 1;
        }

        .center-message,
        .yellow-btn-animated:not(.mobile-btn) {
          display: none;
        }

        .mobile-content.show {
          display: block;
          animation: slideDown 0.3s ease;
        }
      }

      @keyframes slideDown {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Smaller mobile screens */
      @media (max-width: 480px) {
        .figma-header-bar-animated {
          padding: 10px 15px;
        }
        .logo {
          font-size: 16px;
        }
        .mobile-message {
          font-size: 13px;
        }
        .yellow-btn-animated {
          padding: 10px 16px;
          font-size: 14px;
        }
      }
    </style>

    <script>
      function toggleMobileMenu() {
        const toggle = document.querySelector('.mobile-toggle');
        const content = document.getElementById('mobileContent');

        toggle.classList.toggle('active');
        content.classList.toggle('show');
      }

      // Close mobile menu when clicking outside
      document.addEventListener('click', function(event) {
        const toggle = document.querySelector('.mobile-toggle');
        const content = document.getElementById('mobileContent');

        if (!toggle.contains(event.target) && !content.contains(event.target)) {
          toggle.classList.remove('active');
          content.classList.remove('show');
        }
      });
    </script>

    <!-- Demo content to show the header in context -->
    <!-- <div style="padding: 50px 20px; text-align: center; font-family: 'Helvetica Neue', sans-serif;">
      <h1>Welcome to TISSO VISION</h1>
      <p>
        This is a demo page to showcase the responsive header. Try resizing your browser window or viewing on mobile to
        see the responsive behavior.
      </p>
      <p style="margin-top: 30px; color: #666;">
        <strong>Desktop:</strong> Full header with centered message and button<br>
        <strong>Mobile:</strong> Centered logo with hamburger menu on left
      </p>
    </div>
  </body>
</html> -->

<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-cart-notification.css' | asset_url }}"
  media="print"
  onload="this.media='all'"
>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

{% liquid
  assign header_tag = 'div'

  if section.settings.sticky_header_type != 'none'
    assign header_tag = 'sticky-header'
  endif
%}

<{{ header_tag }}
  {% if header_tag == 'sticky-header' %}
    data-sticky-type="{{ section.settings.sticky_header_type }}"
  {% endif %}
  class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}"
>
  <header class="header header--cart-only page-width">
    
    <!-- Only Cart Icon Section -->
    <div class="header__icons header__icons--cart-only">
      
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {% if cart == empty %}
          <span class="svg-wrapper">{{ 'icon-cart-empty.svg' | inline_asset_content }}</span>
        {% else %}
          <span class="svg-wrapper">{{ 'icon-cart.svg' | inline_asset_content }}</span>
        {% endif %}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</{{ header_tag }}>

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification',
    color_scheme: section.settings.color_scheme,
    desktop_menu_type: section.settings.menu_type_desktop
  -%}
{%- endif -%}

<!-- Custom CSS for Cart Only Header -->
<style>
  .header--cart-only {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding: 10px 0;
  }
  
  .header__icons--cart-only {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    background: white;
    padding: 10px;
    border-radius: 50%;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    border: 1px solid #e0e0e0;
  }
  
  .header__icon--cart {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    color: #000;
    text-decoration: none;
    position: relative;
  }
  
  .cart-count-bubble {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #ff0000;
    color: white;
    font-size: 12px;
    font-weight: bold;
    padding: 2px 6px;
    border-radius: 50%;
    min-width: 18px;
    height: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .svg-wrapper {
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .svg-wrapper svg {
    width: 100%;
    height: 100%;
  }
  
  /* Hide all other header elements */
  .header__heading,
  .header__heading-link,
  .header__heading-logo-wrapper,
  .header__menu,
  .site-nav,
  .navigation,
  .main-menu,
  .header__icon--account,
  .header-search,
  .desktop-localization-wrapper,
  localization-form {
    display: none !important;
  }
  
  /* Mobile responsive */
  @media (max-width: 768px) {
    .header__icons--cart-only {
      top: 15px;
      right: 15px;
      padding: 8px;
    }
    
    .header__icon--cart {
      width: 35px;
      height: 35px;
    }
    
    .svg-wrapper {
      width: 20px;
      height: 20px;
    }
  }
</style>

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky =
        this.getAttribute('data-sticky-type') === 'always' ||
        this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      }

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => (this.preventReveal = true);

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach((disclosure) => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

{% schema %}
{
  "name": "Cart Only Header",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "on-scroll-up",
          "label": "On scroll up"
        },
        {
          "value": "always",
          "label": "Always"
        }
      ],
      "default": "none",
      "label": "Sticky header type"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
